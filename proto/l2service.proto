// Copyright (C) 2016 Nippon Telegraph and Telephone Corporation.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
// implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package l2service;

import "l2.proto";

service L2 {
    rpc AddAddress(l2.AddAddressRequest) returns (l2.AddAddressResponse) {}
    rpc DeleteAddress(l2.DeleteAddressRequest) returns (l2.DeleteAddressResponse) {}
    rpc DeleteAddressByPort(l2.DeleteAddressByPortRequest) returns (l2.DeleteAddressByPortResponse) {}
    rpc DeleteAddressByMAC(l2.DeleteAddressByMACRequest) returns (l2.DeleteAddressByMACResponse) {}
    rpc DeleteAddressByVLAN(l2.DeleteAddressByVLANRequest) returns (l2.DeleteAddressByVLANResponse) {}
    rpc DeleteAddressByTrunk(l2.DeleteAddressByTrunkRequest) returns (l2.DeleteAddressByTrunkResponse) {}
    rpc DeleteAddressByMACPort(l2.DeleteAddressByMACPortRequest) returns (l2.DeleteAddressByMACPortResponse) {}
    rpc DeleteAddressByVLANPort(l2.DeleteAddressByVLANPortRequest) returns (l2.DeleteAddressByVLANPortResponse) {}
    rpc DeleteAddressByVLANTrunk(l2.DeleteAddressByVLANTrunkRequest) returns (l2.DeleteAddressByVLANTrunkResponse) {}
    rpc GetAddress(l2.GetAddressRequest) returns (l2.GetAddressResponse) {}
    rpc Monitor(l2.MonitorRequest) returns (stream l2.MonitorResponse) {}
    rpc SetAgeTimer(l2.SetAgeTimerRequest) returns (l2.SetAgeTimerResponse) {}
    rpc GetAgeTimer(l2.GetAgeTimerRequest) returns (l2.GetAgeTimerResponse) {}
    rpc List(l2.ListRequest) returns (l2.ListResponse) {}
//    rpc Freeze(l2.FreezeRequest) returns (l2.FreezeResponse) {}
//    rpc Thaw(l2.ThawRequest) returns (l2.ThawResponse) {}
//    rpc AddTunnel(l2.AddTunnelRequest) returns (l2.AddTunnelResponse) {}
//    rpc Replace(l2.ReplaceRequest) returns (l2.ReplaceResponse) {}
}

//service L2Cache {
//    rpc Init(l2.CacheInitRequest) returns (l2.CacheInitResponse) {}
//    rpc Set(l2.CacheSetRequest) returns (l2.CacheSetResponse) {}
//    rpc Get(l2.CacheGetRequest) returns (l2.CacheGetResponse) {}
//    rpc Delete(l2.CacheDeleteRequest) returns (l2.CacheDeleteResponse) {}
//    rpc DeleteAll(l2.CacheDeleteAllRequest) returns (l2.CacheDeleteAllResponse) {}
//}

service L2Station {
    rpc Add(l2.StationAddRequest) returns (l2.StationAddResponse) {}
    rpc Delete(l2.StationDeleteRequest) returns (l2.StationDeleteResponse) {}
    rpc Get(l2.StationGetRequest) returns (l2.StationGetResponse) {}
}
