// Copyright (C) 2016 Nippon Telegraph and Telephone Corporation.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
// implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package vlan;

enum VLANControlType {
    VLAN_DROP_UNKNOWN = 0;
    VLAN_SHARED = 3;
    VLAN_SHARED_ID = 4;
    VLAN_TRANSLATE = 5;
    VLAN_IGNORE_PKT_TAG = 6;
    VLAN_MEMBER_MISMATCH_TO_CPU = 21;
}

enum VLANControlPortType {
    VLAN_TRANSLATE_NONE = 0;
    VLAN_TRANSLATE_INGRESS_ENABLE = 2;
    VLAN_TRANSLATE_INGRESS_MISS_DROP = 4;
    VLAN_TRANSLATE_EGRESS_ENABLE = 5;
    VLAN_TRANSLATE_EGRESS_MISS_DROP = 6;
}

message VLANData {
    uint32 vid = 1;
    repeated uint32 pbmp = 2;
    repeated uint32 ut_pbmp = 3;
}

message CreateRequest {
    int64 unit = 1;
    uint32 vid = 2;
}

message CreateResponse {
}

message DestroyRequest {
    int64 unit = 1;
    uint32 vid = 2;
}

message DestroyResponse {
}

message DestroyAllRequest {
    int64 unit = 1;
}

message DestroyAllResponse {
}

message PortAddRequest {
    int64 unit = 1;
    uint32 vid = 2;
    repeated uint32 pbmp = 3;
    repeated uint32 ut_pbmp = 4;
}

message PortAddResponse {
}

message PortRemoveRequest {
    int64 unit = 1;
    uint32 vid = 2;
    repeated uint32 pbmp = 3;
}

message PortRemoveResponse {
}

message GPortAddRequest {
    int64 unit = 1;
    uint32 vid = 2;
    int64 port = 3;
    int64 flags = 4;
}

message GPortAddResponse {
}

message GPortDeleteRequest {
    int64 unit = 1;
    uint32 vid = 2;
    int64 port = 3;
}

message GPortDeleteResponse {
}

message GPortDeleteAllRequest {
    int64 unit = 1;
    uint32 vid = 2;
}

message GPortDeleteAllResponse {
}

message ListRequest {
    int64 unit = 1;
}

message ListResponse {
    repeated VLANData list = 1;
}

message DefaultGetRequest {
    int64 unit = 1;
}

message DefaultGetResponse {
    uint32 vid = 1;
}

message DefaultSetRequest {
    int64 unit = 1;
    uint32 vid = 2;
}

message DefaultSetResponse {
}

message ControlSetRequest {
    int64 unit = 1;
    VLANControlType type = 2;
    int64 value = 3;
}

message ControlSetResponse {
}

message ControlPortSetRequest {
    int64 unit = 1;
    VLANControlPortType type = 2;
    int64 value = 3;
}

message ControlPortSetResponse {
}
