// Copyright (C) 2016 Nippon Telegraph and Telephone Corporation.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
// implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package stat;

enum StatType {
    STAT_TYPE_IF_IN_OCTETS = 0;
    STAT_TYPE_IF_IN_UCAST_PKTS = 1;
    STAT_TYPE_IF_IN_NUCAST_PKTS = 2;
    STAT_TYPE_IF_IN_DISCARDS = 3;
    STAT_TYPE_IF_IN_ERRORS = 4;
    STAT_TYPE_IF_IN_UNKNOWN_PROTOS = 5;
    STAT_TYPE_IF_OUT_OCTETS = 6;
    STAT_TYPE_IF_OUT_UCAST_PKTS = 7;
    STAT_TYPE_IF_OUT_NUCAST_PKTS = 8;
    STAT_TYPE_IF_OUT_DISCARDS = 9;
    STAT_TYPE_IF_OUT_ERRORS = 10;
    STAT_TYPE_IF_OUT_QLEN = 11;
    STAT_TYPE_IP_IN_RECEIVES = 12;
    STAT_TYPE_IP_IN_HDR_ERRORS = 13;
    STAT_TYPE_IP_FORW_DATAGRAMS = 14;
    STAT_TYPE_IP_IN_DISCARDS = 15;
    STAT_TYPE_DOT1D_BASE_PORT_DELAY_EXCEEDED_DISCARDS = 16; /**< RFC 1493 */
    STAT_TYPE_DOT1D_BASE_PORT_MTU_EXCEEDED_DISCARDS = 17; /**< RFC 1493 */
    STAT_TYPE_DOT1D_TP_PORT_IN_FRAMES = 18; /**< RFC 1493 */
    STAT_TYPE_DOT1D_TP_PORT_OUT_FRAMES = 19; /**< RFC 1493 */
    STAT_TYPE_DOT1D_PORT_IN_DISCARDS = 20; /**< RFC 1493 */
    STAT_TYPE_ETHER_STATS_DROP_EVENTS = 21; /**< RFC 1757 (EtherStat) */
    STAT_TYPE_ETHER_STATS_MULTICAST_PKTS = 22; /**< RFC 1757 (EtherStat) */
    STAT_TYPE_ETHER_STATS_BROADCAST_PKTS = 23; /**< RFC 1757 (EtherStat) */
    STAT_TYPE_ETHER_STATS_UNDERSIZE_PKTS = 24; /**< RFC 1757 (EtherStat) */
    STAT_TYPE_ETHER_STATS_FRAGMENTS = 25; /**< RFC 1757 (EtherStat) */
    STAT_TYPE_ETHER_STATS_PKTS_64_OCTETS = 26; /**< RFC 1757 (EtherStat) */
    STAT_TYPE_ETHER_STATS_PKTS_65TO127_OCTETS = 27; /**< RFC 1757 (EtherStat) */
    STAT_TYPE_ETHER_STATS_PKTS_128TO255_OCTETS = 28; /**< RFC 1757 (EtherStat) */
    STAT_TYPE_ETHER_STATS_PKTS_256TO511_OCTETS = 29; /**< RFC 1757 (EtherStat) */
    STAT_TYPE_ETHER_STATS_PKTS_512TO1023_OCTETS = 30; /**< RFC 1757 (EtherStat) */
    STAT_TYPE_ETHER_STATS_PKTS_1024TO1518_OCTETS = 31; /**< RFC 1757 (EtherStat) */
    STAT_TYPE_ETHER_STATS_OVERSIZE_PKTS = 32; /**< RFC 1757 (EtherStat) */
    STAT_TYPE_ETHER_RX_OVER_SIZE_PKTS = 33; /**< RX component of
                                           snmpEtherStatsOversizePkts */
    STAT_TYPE_ETHER_TX_OVER_SIZE_PKTS = 34; /**< Tx component of
                                           snmpEtherStatsOversizePkts */
    STAT_TYPE_ETHER_STATS_JABBERS = 35; /**< RFC 1757 (EtherStat) */
    STAT_TYPE_ETHER_STATS_OCTETS = 36; /**< RFC 1757 (EtherStat) */
    STAT_TYPE_ETHER_STATS_PKTS = 37; /**< RFC 1757 (EtherStat) */
    STAT_TYPE_ETHER_STATS_COLLISIONS = 38; /**< RFC 1757 (EtherStat) */
    STAT_TYPE_ETHER_STATS_CRC_ALIGN_ERRORS = 39; /**< RFC 1757 (EtherStat) */
    STAT_TYPE_ETHER_STATS_TX_NO_ERRORS = 40; /**< RFC 1757 (EtherStat) */
    STAT_TYPE_ETHER_STATS_RX_NO_ERRORS = 41; /**< RFC 1757 (EtherStat) */
    STAT_TYPE_DOT3_STATS_ALIGNMENT_ERRORS = 42; /**< RFC 2665 */
    STAT_TYPE_DOT3_STATS_FCS_ERRORS = 43; /**< RFC 2665 */
    STAT_TYPE_DOT3_STATS_SINGLE_COLLISION_FRAMES = 44; /**< RFC 2665 */
    STAT_TYPE_DOT3_STATS_MULTIPLE_COLLISION_FRAMES = 45; /**< RFC 2665 */
    STAT_TYPE_DOT3_STATS_SQET_TEST_ERRORS = 46; /**< RFC 2665 */
    STAT_TYPE_DOT3_STATS_DEFERRED_TRANSMISSIONS = 47; /**< RFC 2665 */
    STAT_TYPE_DOT3_STATS_LATE_COLLISIONS = 48; /**< RFC 2665 */
    STAT_TYPE_DOT3_STATS_EXCESSIVE_COLLISIONS = 49; /**< RFC 2665 */
    STAT_TYPE_DOT3_STATS_INTERNAL_MAC_TRANSMIT_ERRORS = 50; /**< RFC 2665 */
    STAT_TYPE_DOT3_STATS_CARRIER_SENSE_ERRORS = 51; /**< RFC 2665 */
    STAT_TYPE_DOT3_STATS_FRAME_TOO_LONGS = 52; /**< RFC 2665 */
    STAT_TYPE_DOT3_STATS_INTERNAL_MAC_RECEIVE_ERRORS = 53; /**< RFC 2665 */
    STAT_TYPE_DOT3_STATS_SYMBOL_ERRORS = 54; /**< RFC 2665 */
    STAT_TYPE_DOT3_CONTROL_IN_UNKNOWN_OP_CODES = 55; /**< RFC 2665 */
    STAT_TYPE_DOT3_IN_PAUSE_FRAMES = 56; /**< RFC 2665 */
    STAT_TYPE_DOT3_OUT_PAUSE_FRAMES = 57; /**< RFC 2665 */
    STAT_TYPE_IF_HC_IN_OCTETS = 58;  /**< RFC 2233 */
    STAT_TYPE_IF_HC_IN_UCAST_PKTS = 59; /**< RFC 2233 */
    STAT_TYPE_IF_HC_IN_MULTICAST_PKTS = 60; /**< RFC 2233 */
    STAT_TYPE_IF_HC_IN_BROADCAST_PKTS = 61; /**< RFC 2233 */
    STAT_TYPE_IF_HC_OUT_OCTETS = 62; /**< RFC 2233 */
    STAT_TYPE_IF_HC_OUT_UCAST_PKTS = 63; /**< RFC 2233 */
    STAT_TYPE_IF_HC_OUT_MULTICAST_PKTS = 64; /**< RFC 2233 */
    STAT_TYPE_IF_HC_OUT_BROADCAST_PKTS = 65; /**< RFC 2233 */
    STAT_TYPE_IPV6_IF_STATS_IN_RECEIVES = 66; /**< RFC 2465 */
    STAT_TYPE_IPV6_IF_STATS_IN_HDR_ERRORS = 67; /**< RFC 2465 */
    STAT_TYPE_IPV6_IF_STATS_IN_ADDR_ERRORS = 68; /**< RFC 2465 */
    STAT_TYPE_IPV6_IF_STATS_IN_DISCARDS = 69; /**< RFC 2465 */
    STAT_TYPE_IPV6_IF_STATS_OUT_FORW_DATAGRAMS = 70; /**< RFC 2465 */
    STAT_TYPE_IPV6_IF_STATS_OUT_DISCARDS = 71; /**< RFC 2465 */
    STAT_TYPE_IPV6_IF_STATS_IN_MCAST_PKTS = 72; /**< RFC 2465 */
    STAT_TYPE_IPV6_IF_STATS_OUT_MCAST_PKTS = 73; /**< RFC 2465 */
    STAT_TYPE_IF_IN_BROADCAST_PKTS = 74; /**< RFC 1573 */
    STAT_TYPE_IF_IN_MULTICAST_PKTS = 75; /**< RFC 1573 */
    STAT_TYPE_IF_OUT_BROADCAST_PKTS = 76; /**< RFC 1573 */
    STAT_TYPE_IF_OUT_MULTICAST_PKTS = 77; /**< RFC 1573 */
    STAT_TYPE_IEEE8021_PFC_REQUESTS = 78; /**< IEEE 802.1bb */
    STAT_TYPE_IEEE8021_PFC_INDICATIONS = 79; /**< IEEE 802.1bb */
//    snmpOpenNSLReceivedUndersizePkts = 80, /**< Broadcom-specific */
//    snmpOpenNSLTransmittedUndersizePkts = 81, /**< Broadcom-specific */
//    snmpOpenNSLIPMCBridgedPckts = 82,   /**< Broadcom-specific */
//    snmpOpenNSLIPMCRoutedPckts = 83,    /**< Broadcom-specific */
//    snmpOpenNSLIPMCInDroppedPckts = 84, /**< Broadcom-specific */
//    snmpOpenNSLIPMCOutDroppedPckts = 85, /**< Broadcom-specific */
//    snmpOpenNSLEtherStatsPkts1519to1522Octets = 86, /**< Broadcom-specific */
//    snmpOpenNSLEtherStatsPkts1522to2047Octets = 87, /**< Broadcom-specific */
//    snmpOpenNSLEtherStatsPkts2048to4095Octets = 88, /**< Broadcom-specific */
//    snmpOpenNSLEtherStatsPkts4095to9216Octets = 89, /**< Broadcom-specific */
//    snmpOpenNSLReceivedPkts64Octets = 90, /**< Broadcom-specific */
//    snmpOpenNSLReceivedPkts65to127Octets = 91, /**< Broadcom-specific */
//    snmpOpenNSLReceivedPkts128to255Octets = 92, /**< Broadcom-specific */
//    snmpOpenNSLReceivedPkts256to511Octets = 93, /**< Broadcom-specific */
//    snmpOpenNSLReceivedPkts512to1023Octets = 94, /**< Broadcom-specific */
//    snmpOpenNSLReceivedPkts1024to1518Octets = 95, /**< Broadcom-specific */
//    snmpOpenNSLReceivedPkts1519to2047Octets = 96, /**< Broadcom-specific */
//    snmpOpenNSLReceivedPkts2048to4095Octets = 97, /**< Broadcom-specific */
//    snmpOpenNSLReceivedPkts4095to9216Octets = 98, /**< Broadcom-specific */
//    snmpOpenNSLTransmittedPkts64Octets = 99, /**< Broadcom-specific */
//    snmpOpenNSLTransmittedPkts65to127Octets = 100, /**< Broadcom-specific */
//    snmpOpenNSLTransmittedPkts128to255Octets = 101, /**< Broadcom-specific */
//    snmpOpenNSLTransmittedPkts256to511Octets = 102, /**< Broadcom-specific */
//    snmpOpenNSLTransmittedPkts512to1023Octets = 103, /**< Broadcom-specific */
//    snmpOpenNSLTransmittedPkts1024to1518Octets = 104, /**< Broadcom-specific */
//    snmpOpenNSLTransmittedPkts1519to2047Octets = 105, /**< Broadcom-specific */
//    snmpOpenNSLTransmittedPkts2048to4095Octets = 106, /**< Broadcom-specific */
//    snmpOpenNSLTransmittedPkts4095to9216Octets = 107, /**< Broadcom-specific */
//    snmpOpenNSLTxControlCells = 108,    /**< Fabric TX Control cells counter.
//                                           (Broadcom-specific) */
//    snmpOpenNSLTxDataCells = 109,       /**< Fabric TX Data cell counter.
//                                           (Broadcom-specific) */
//    snmpOpenNSLTxDataBytes = 110,       /**< Fabric TX Data byte counter.
//                                           (Broadcom-specific) */
//    snmpOpenNSLRxCrcErrors = 111,       /**< Fabric RX CRC errors counter.
//                                           (Broadcom-specific) */
//    snmpOpenNSLRxFecCorrectable = 112,  /**< Fabric RX LFEC/FEC correctable error.
//                                           (Broadcom-specific) */
//    snmpOpenNSLRxBecCrcErrors = 113,    /**< Fabric RX BEC crc error.
//                                           (Broadcom-specific) */
//    snmpOpenNSLRxDisparityErrors = 114, /**< Fabric RX 8b/10b disparity errors.
//                                           (Broadcom-specific) */
//    snmpOpenNSLRxControlCells = 115,    /**< Fabric RX Control cells counter.
//                                           (Broadcom-specific) */
//    snmpOpenNSLRxDataCells = 116,       /**< Fabric RX Data cell counter.
//                                           (Broadcom-specific) */
//    snmpOpenNSLRxDataBytes = 117,       /**< Fabric RX Data byte counter.
//                                           (Broadcom-specific) */
//    snmpOpenNSLRxDroppedRetransmittedControl = 118, /**< Fabric RX dropped retransmitted
//                                           control. (Broadcom-specific) */
//    snmpOpenNSLTxBecRetransmit = 119,   /**< Fabric TX BEC retransmit.
//                                           (Broadcom-specific) */
//    snmpOpenNSLRxBecRetransmit = 120,   /**< Fabric RX BEC retransmit.
//                                           (Broadcom-specific) */
//    snmpOpenNSLTxAsynFifoRate = 121,    /**< Fabric TX Asyn fifo rate at units of
//                                           40 bits. (Broadcom-specific) */
//    snmpOpenNSLRxAsynFifoRate = 122,    /**< Fabric RX Asyn fifo rate at units of
//                                           40 bits. (Broadcom-specific) */
//    snmpOpenNSLRxFecUncorrectable = 123, /**< Fabric RX LFEC/FEC uncorrectable
//                                           erros. (Broadcom-specific) */
//    snmpOpenNSLRxBecRxFault = 124,      /**< Fabric RX BEC RX fault.
//                                           (Broadcom-specific) */
//    snmpOpenNSLRxCodeErrors = 125,      /**< Fabric RX 8b/10b code errors.
//                                           (Broadcom-specific) */
//    snmpOpenNSLRxLlfcPrimary = 126,     /**< Fabric RX LLFC Primary.
//                                           (Broadcom-specific) */
//    snmpOpenNSLRxLlfcSecondary = 127,   /**< Fabric RX LLFC Secondary.
//                                           (Broadcom-specific) */
//    snmpOpenNSLCustomReceive0 = 128,    /**< Broadcom-specific */
//    snmpOpenNSLCustomReceive1 = 129,    /**< Broadcom-specific */
//    snmpOpenNSLCustomReceive2 = 130,    /**< Broadcom-specific */
//    snmpOpenNSLCustomReceive3 = 131,    /**< Broadcom-specific */
//    snmpOpenNSLCustomReceive4 = 132,    /**< Broadcom-specific */
//    snmpOpenNSLCustomReceive5 = 133,    /**< Broadcom-specific */
//    snmpOpenNSLCustomReceive6 = 134,    /**< Broadcom-specific */
//    snmpOpenNSLCustomReceive7 = 135,    /**< Broadcom-specific */
//    snmpOpenNSLCustomReceive8 = 136,    /**< Broadcom-specific */
//    snmpOpenNSLCustomTransmit0 = 137,   /**< Broadcom-specific */
//    snmpOpenNSLCustomTransmit1 = 138,   /**< Broadcom-specific */
//    snmpOpenNSLCustomTransmit2 = 139,   /**< Broadcom-specific */
//    snmpOpenNSLCustomTransmit3 = 140,   /**< Broadcom-specific */
//    snmpOpenNSLCustomTransmit4 = 141,   /**< Broadcom-specific */
//    snmpOpenNSLCustomTransmit5 = 142,   /**< Broadcom-specific */
//    snmpOpenNSLCustomTransmit6 = 143,   /**< Broadcom-specific */
//    snmpOpenNSLCustomTransmit7 = 144,   /**< Broadcom-specific */
//    snmpOpenNSLCustomTransmit8 = 145,   /**< Broadcom-specific */
//    snmpOpenNSLCustomTransmit9 = 146,   /**< Broadcom-specific */
//    snmpOpenNSLCustomTransmit10 = 147,  /**< Broadcom-specific */
//    snmpOpenNSLCustomTransmit11 = 148,  /**< Broadcom-specific */
//    snmpOpenNSLCustomTransmit12 = 149,  /**< Broadcom-specific */
//    snmpOpenNSLCustomTransmit13 = 150,  /**< Broadcom-specific */
//    snmpOpenNSLCustomTransmit14 = 151,  /**< Broadcom-specific */
//    opennsl_spl_snmpDot3StatsInRangeLengthError = 152, /**< RFC 1284 */
//    opennsl_spl_snmpDot3OmpEmulationCRC8Errors = 153, /**< RFC 4837 */
//    opennsl_spl_snmpDot3MpcpRxGate = 154, /**< RFC 4837 */
//    opennsl_spl_snmpDot3MpcpRxRegister = 155, /**< RFC 4837 */
//    opennsl_spl_snmpDot3MpcpTxRegRequest = 156, /**< RFC 4837 */
//    opennsl_spl_snmpDot3MpcpTxRegAck = 157, /**< RFC 4837 */
//    opennsl_spl_snmpDot3MpcpTxReport = 158, /**< RFC 4837 */
//    opennsl_spl_snmpDot3EponFecCorrectedBlocks = 159, /**< RFC 4837 */
//    opennsl_spl_snmpDot3EponFecUncorrectableBlocks = 160, /**< RFC 4837 */
//    snmpOpenNSLPonInDroppedOctets = 161, /**< Broadcom-specific */
//    snmpOpenNSLPonOutDroppedOctets = 162, /**< Broadcom-specific */
//    snmpOpenNSLPonInDelayedOctets = 163, /**< Broadcom-specific */
//    snmpOpenNSLPonOutDelayedOctets = 164, /**< Broadcom-specific */
//    snmpOpenNSLPonInDelayedHundredUs = 165, /**< Broadcom-specific */
//    snmpOpenNSLPonOutDelayedHundredUs = 166, /**< Broadcom-specific */
//    snmpOpenNSLPonInFrameErrors = 167,  /**< Broadcom-specific */
//    snmpOpenNSLPonInOamFrames = 168,    /**< Broadcom-specific */
//    snmpOpenNSLPonOutOamFrames = 169,   /**< Broadcom-specific */
//    snmpOpenNSLPonOutUnusedOctets = 170, /**< Broadcom-specific */
//    snmpOpenNSLEtherStatsPkts9217to16383Octets = 171, /**< Broadcom-specific */
//    snmpOpenNSLReceivedPkts9217to16383Octets = 172, /**< Broadcom-specific */
//    snmpOpenNSLTransmittedPkts9217to16383Octets = 173, /**< Broadcom-specific */
//    snmpOpenNSLRxVlanTagFrame = 174,    /**< Broadcom-specific */
//    snmpOpenNSLRxDoubleVlanTagFrame = 175, /**< Broadcom-specific */
//    snmpOpenNSLTxVlanTagFrame = 176,    /**< Broadcom-specific */
//    snmpOpenNSLTxDoubleVlanTagFrame = 177, /**< Broadcom-specific */
//    snmpOpenNSLRxPFCControlFrame = 178, /**< PFC Receive Control Frame */
//    snmpOpenNSLTxPFCControlFrame = 179, /**< PFC Transmit Control Frame */
//    snmpOpenNSLRxPFCFrameXonPriority0 = 180, /**< Receive PFC Frame Priority 0 XON to
//                                           XOFF */
//    snmpOpenNSLRxPFCFrameXonPriority1 = 181, /**< Receive PFC Frame Priority 1 XON to
//                                           XOFF */
//    snmpOpenNSLRxPFCFrameXonPriority2 = 182, /**< Receive PFC Frame Priority 2 XON to
//                                           XOFF */
//    snmpOpenNSLRxPFCFrameXonPriority3 = 183, /**< Receive PFC Frame Priority 3 XON to
//                                           XOFF */
//    snmpOpenNSLRxPFCFrameXonPriority4 = 184, /**< Receive PFC Frame Priority 4 XON to
//                                           XOFF */
//    snmpOpenNSLRxPFCFrameXonPriority5 = 185, /**< Receive PFC Frame Priority 5 XON to
//                                           XOFF */
//    snmpOpenNSLRxPFCFrameXonPriority6 = 186, /**< Receive PFC Frame Priority 6 XON to
//                                           XOFF */
//    snmpOpenNSLRxPFCFrameXonPriority7 = 187, /**< Receive PFC Frame Priority 7 XON to
//                                           XOFF */
//    snmpOpenNSLRxPFCFramePriority0 = 188, /**< Receive PFC Frame Priority 0 */
//    snmpOpenNSLRxPFCFramePriority1 = 189, /**< Receive PFC Frame Priority 1 */
//    snmpOpenNSLRxPFCFramePriority2 = 190, /**< Receive PFC Frame Priority 2 */
//    snmpOpenNSLRxPFCFramePriority3 = 191, /**< Receive PFC Frame Priority 3 */
//    snmpOpenNSLRxPFCFramePriority4 = 192, /**< Receive PFC Frame Priority 4 */
//    snmpOpenNSLRxPFCFramePriority5 = 193, /**< Receive PFC Frame Priority 5 */
//    snmpOpenNSLRxPFCFramePriority6 = 194, /**< Receive PFC Frame Priority 6 */
//    snmpOpenNSLRxPFCFramePriority7 = 195, /**< Receive PFC Frame Priority 7 */
//    snmpOpenNSLTxPFCFramePriority0 = 196, /**< Transmit PFC Frame Priority 0 */
//    snmpOpenNSLTxPFCFramePriority1 = 197, /**< Transmit PFC Frame Priority 1 */
//    snmpOpenNSLTxPFCFramePriority2 = 198, /**< Transmit PFC Frame Priority 2 */
//    snmpOpenNSLTxPFCFramePriority3 = 199, /**< Transmit PFC Frame Priority 3 */
//    snmpOpenNSLTxPFCFramePriority4 = 200, /**< Transmit PFC Frame Priority 4 */
//    snmpOpenNSLTxPFCFramePriority5 = 201, /**< Transmit PFC Frame Priority 5 */
//    snmpOpenNSLTxPFCFramePriority6 = 202, /**< Transmit PFC Frame Priority 6 */
//    snmpOpenNSLTxPFCFramePriority7 = 203, /**< Transmit PFC Frame Priority 7 */
//    opennsl_spl_snmpFcmPortClass3RxFrames = 204, /**< RFC 4044 */
//    opennsl_spl_snmpFcmPortClass3TxFrames = 205, /**< RFC 4044 */
//    opennsl_spl_snmpFcmPortClass3Discards = 206, /**< RFC 4044 */
//    opennsl_spl_snmpFcmPortClass2RxFrames = 207, /**< RFC 4044 */
//    opennsl_spl_snmpFcmPortClass2TxFrames = 208, /**< RFC 4044 */
//    opennsl_spl_snmpFcmPortClass2Discards = 209, /**< RFC 4044 */
//    opennsl_spl_snmpFcmPortInvalidCRCs = 210, /**< RFC 4044 */
//    opennsl_spl_snmpFcmPortDelimiterErrors = 211, /**< RFC 4044 */
//    snmpOpenNSLSampleIngressPkts = 212, /**< Total number of packets eligible to
//                                           be sampled by Ingress Sampler.
//                                           (Broadcom-specific) */
//    snmpOpenNSLSampleIngressSnapshotPkts = 213, /**< Total number of eligible packets when
//                                           the last packet was sampled by
//                                           Ingress sampler. (Broadcom-specific) */
//    snmpOpenNSLSampleIngressSampledPkts = 214, /**< Total number of packets sampled by
//                                           Ingress sampler. (Broadcom-specific) */
//    snmpOpenNSLSampleFlexPkts = 215,    /**< Total number of packets eligible to
//                                           be sampled by Flex sampler enabled by
//                                           IFP ingress sampling policy action.
//                                           (Broadcom-specific) */
//    snmpOpenNSLSampleFlexSnapshotPkts = 216, /**< Total number of eligible packets when
//                                           the last packet was sampled by Flex
//                                           sampler enabled by IFP ingress
//                                           sampling policy action.
//                                           (Broadcom-specific) */
//    snmpOpenNSLSampleFlexSampledPkts = 217, /**< Total number of packets sampled by
//                                           Flex sampler enabled by IFP ingress
//                                           sampling policy action.
//                                           (Broadcom-specific) */
//    snmpOpenNSLEgressProtectionDataDrop = 218, /**< Egress Protection data drop in EPIPE.
//                                           (Broadcom-specific) */
//    opennsl_spl_snmpValCount = 219      
}

message InitRequest {
    int64 unit = 1;
}

message InitResponse {
}

message ClearRequest {
    int64 unit = 1;
    int64 port = 2;
}

message ClearResponse {
}

message SyncRequest {
    int64 unit = 1;
}

message SyncResponse {
}

message GetRequest {
    int64 unit = 1;
    int64 port = 2;
    StatType type = 3;
}

message GetResponse {
    uint64 value = 1;
}

message MultiGetRequest {
    int64 unit = 1;
    int64 port = 2;
    repeated StatType type = 3;
}

message MultiGetResponse {
    repeated uint64 value = 1;
}
