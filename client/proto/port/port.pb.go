// Code generated by protoc-gen-go.
// source: port.proto
// DO NOT EDIT!

/*
Package port is a generated protocol buffer package.

It is generated from these files:
	port.proto

It has these top-level messages:
	PortConfig
	PortInfo
	InitRequest
	InitResponse
	ClearRequest
	ClearResponse
	ProbeRequest
	ProbeResponse
	DetachRequest
	DetachResponse
	GetConfigRequest
	GetConfigResponse
	GetPortNameRequest
	GetPortNameResponse
*/
package port

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PortConfig struct {
	Fe         []uint32 `protobuf:"varint,1,rep,name=fe" json:"fe,omitempty"`
	Ge         []uint32 `protobuf:"varint,2,rep,name=ge" json:"ge,omitempty"`
	Xe         []uint32 `protobuf:"varint,3,rep,name=xe" json:"xe,omitempty"`
	Ce         []uint32 `protobuf:"varint,4,rep,name=ce" json:"ce,omitempty"`
	E          []uint32 `protobuf:"varint,5,rep,name=e" json:"e,omitempty"`
	Hg         []uint32 `protobuf:"varint,6,rep,name=hg" json:"hg,omitempty"`
	Sci        []uint32 `protobuf:"varint,7,rep,name=sci" json:"sci,omitempty"`
	Sfi        []uint32 `protobuf:"varint,8,rep,name=sfi" json:"sfi,omitempty"`
	Spi        []uint32 `protobuf:"varint,9,rep,name=spi" json:"spi,omitempty"`
	SpiSubport []uint32 `protobuf:"varint,10,rep,name=spi_subport,json=spiSubport" json:"spi_subport,omitempty"`
	Port       []uint32 `protobuf:"varint,11,rep,name=port" json:"port,omitempty"`
	Cpu        []uint32 `protobuf:"varint,12,rep,name=cpu" json:"cpu,omitempty"`
	All        []uint32 `protobuf:"varint,13,rep,name=all" json:"all,omitempty"`
	StackInt   []uint32 `protobuf:"varint,14,rep,name=stack_int,json=stackInt" json:"stack_int,omitempty"`
	StackExt   []uint32 `protobuf:"varint,15,rep,name=stack_ext,json=stackExt" json:"stack_ext,omitempty"`
	Tdm        []uint32 `protobuf:"varint,16,rep,name=tdm" json:"tdm,omitempty"`
	Pon        []uint32 `protobuf:"varint,17,rep,name=pon" json:"pon,omitempty"`
	Llid       []uint32 `protobuf:"varint,18,rep,name=llid" json:"llid,omitempty"`
	Xl         []uint32 `protobuf:"varint,19,rep,name=xl" json:"xl,omitempty"`
	Rcy        []uint32 `protobuf:"varint,20,rep,name=rcy" json:"rcy,omitempty"`
	//    opennsl_pbmp_t per_pipe[OPENNSL_PIPES_MAX]; /**< Mask of ports per pipe. The number of
	//                                           pipes per device can be obtained via
	//                                           num_pipes field of opennsl_info_t. */
	Nif     []uint32 `protobuf:"varint,22,rep,name=nif" json:"nif,omitempty"`
	Control []uint32 `protobuf:"varint,23,rep,name=control" json:"control,omitempty"`
}

func (m *PortConfig) Reset()                    { *m = PortConfig{} }
func (m *PortConfig) String() string            { return proto.CompactTextString(m) }
func (*PortConfig) ProtoMessage()               {}
func (*PortConfig) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type PortInfo struct {
	ActionMask       uint32 `protobuf:"varint,1,opt,name=action_mask,json=actionMask" json:"action_mask,omitempty"`
	ActionMask2      uint32 `protobuf:"varint,2,opt,name=action_mask2,json=actionMask2" json:"action_mask2,omitempty"`
	Enable           int64  `protobuf:"varint,3,opt,name=enable" json:"enable,omitempty"`
	LinkStatus       int64  `protobuf:"varint,4,opt,name=link_status,json=linkStatus" json:"link_status,omitempty"`
	AutoNeg          int64  `protobuf:"varint,5,opt,name=auto_neg,json=autoNeg" json:"auto_neg,omitempty"`
	Speed            int64  `protobuf:"varint,6,opt,name=speed" json:"speed,omitempty"`
	Duplex           int64  `protobuf:"varint,7,opt,name=duplex" json:"duplex,omitempty"`
	Linkscan         int64  `protobuf:"varint,8,opt,name=linkscan" json:"linkscan,omitempty"`
	Learn            uint32 `protobuf:"varint,9,opt,name=learn" json:"learn,omitempty"`
	Discard          int64  `protobuf:"varint,10,opt,name=discard" json:"discard,omitempty"`
	Vlanfilter       uint32 `protobuf:"varint,11,opt,name=vlanfilter" json:"vlanfilter,omitempty"`
	UntaggedPriority int64  `protobuf:"varint,12,opt,name=untagged_priority,json=untaggedPriority" json:"untagged_priority,omitempty"`
}

func (m *PortInfo) Reset()                    { *m = PortInfo{} }
func (m *PortInfo) String() string            { return proto.CompactTextString(m) }
func (*PortInfo) ProtoMessage()               {}
func (*PortInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type InitRequest struct {
	Unit int64 `protobuf:"varint,1,opt,name=unit" json:"unit,omitempty"`
}

func (m *InitRequest) Reset()                    { *m = InitRequest{} }
func (m *InitRequest) String() string            { return proto.CompactTextString(m) }
func (*InitRequest) ProtoMessage()               {}
func (*InitRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type InitResponse struct {
}

func (m *InitResponse) Reset()                    { *m = InitResponse{} }
func (m *InitResponse) String() string            { return proto.CompactTextString(m) }
func (*InitResponse) ProtoMessage()               {}
func (*InitResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type ClearRequest struct {
	Unit int64 `protobuf:"varint,1,opt,name=unit" json:"unit,omitempty"`
}

func (m *ClearRequest) Reset()                    { *m = ClearRequest{} }
func (m *ClearRequest) String() string            { return proto.CompactTextString(m) }
func (*ClearRequest) ProtoMessage()               {}
func (*ClearRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type ClearResponse struct {
}

func (m *ClearResponse) Reset()                    { *m = ClearResponse{} }
func (m *ClearResponse) String() string            { return proto.CompactTextString(m) }
func (*ClearResponse) ProtoMessage()               {}
func (*ClearResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type ProbeRequest struct {
	Unit int64  `protobuf:"varint,1,opt,name=unit" json:"unit,omitempty"`
	Pbmp []byte `protobuf:"bytes,2,opt,name=pbmp,proto3" json:"pbmp,omitempty"`
}

func (m *ProbeRequest) Reset()                    { *m = ProbeRequest{} }
func (m *ProbeRequest) String() string            { return proto.CompactTextString(m) }
func (*ProbeRequest) ProtoMessage()               {}
func (*ProbeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

type ProbeResponse struct {
	Pbmp []byte `protobuf:"bytes,1,opt,name=pbmp,proto3" json:"pbmp,omitempty"`
}

func (m *ProbeResponse) Reset()                    { *m = ProbeResponse{} }
func (m *ProbeResponse) String() string            { return proto.CompactTextString(m) }
func (*ProbeResponse) ProtoMessage()               {}
func (*ProbeResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

type DetachRequest struct {
	Unit int64  `protobuf:"varint,1,opt,name=unit" json:"unit,omitempty"`
	Pbmp []byte `protobuf:"bytes,2,opt,name=pbmp,proto3" json:"pbmp,omitempty"`
}

func (m *DetachRequest) Reset()                    { *m = DetachRequest{} }
func (m *DetachRequest) String() string            { return proto.CompactTextString(m) }
func (*DetachRequest) ProtoMessage()               {}
func (*DetachRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

type DetachResponse struct {
	Pbmp []byte `protobuf:"bytes,1,opt,name=pbmp,proto3" json:"pbmp,omitempty"`
}

func (m *DetachResponse) Reset()                    { *m = DetachResponse{} }
func (m *DetachResponse) String() string            { return proto.CompactTextString(m) }
func (*DetachResponse) ProtoMessage()               {}
func (*DetachResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

type GetConfigRequest struct {
	Unit int64 `protobuf:"varint,1,opt,name=unit" json:"unit,omitempty"`
}

func (m *GetConfigRequest) Reset()                    { *m = GetConfigRequest{} }
func (m *GetConfigRequest) String() string            { return proto.CompactTextString(m) }
func (*GetConfigRequest) ProtoMessage()               {}
func (*GetConfigRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

type GetConfigResponse struct {
	Config *PortConfig `protobuf:"bytes,1,opt,name=config" json:"config,omitempty"`
}

func (m *GetConfigResponse) Reset()                    { *m = GetConfigResponse{} }
func (m *GetConfigResponse) String() string            { return proto.CompactTextString(m) }
func (*GetConfigResponse) ProtoMessage()               {}
func (*GetConfigResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *GetConfigResponse) GetConfig() *PortConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

type GetPortNameRequest struct {
	Unit int64 `protobuf:"varint,1,opt,name=unit" json:"unit,omitempty"`
	Port int64 `protobuf:"varint,2,opt,name=port" json:"port,omitempty"`
}

func (m *GetPortNameRequest) Reset()                    { *m = GetPortNameRequest{} }
func (m *GetPortNameRequest) String() string            { return proto.CompactTextString(m) }
func (*GetPortNameRequest) ProtoMessage()               {}
func (*GetPortNameRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

type GetPortNameResponse struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *GetPortNameResponse) Reset()                    { *m = GetPortNameResponse{} }
func (m *GetPortNameResponse) String() string            { return proto.CompactTextString(m) }
func (*GetPortNameResponse) ProtoMessage()               {}
func (*GetPortNameResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func init() {
	proto.RegisterType((*PortConfig)(nil), "port.PortConfig")
	proto.RegisterType((*PortInfo)(nil), "port.PortInfo")
	proto.RegisterType((*InitRequest)(nil), "port.InitRequest")
	proto.RegisterType((*InitResponse)(nil), "port.InitResponse")
	proto.RegisterType((*ClearRequest)(nil), "port.ClearRequest")
	proto.RegisterType((*ClearResponse)(nil), "port.ClearResponse")
	proto.RegisterType((*ProbeRequest)(nil), "port.ProbeRequest")
	proto.RegisterType((*ProbeResponse)(nil), "port.ProbeResponse")
	proto.RegisterType((*DetachRequest)(nil), "port.DetachRequest")
	proto.RegisterType((*DetachResponse)(nil), "port.DetachResponse")
	proto.RegisterType((*GetConfigRequest)(nil), "port.GetConfigRequest")
	proto.RegisterType((*GetConfigResponse)(nil), "port.GetConfigResponse")
	proto.RegisterType((*GetPortNameRequest)(nil), "port.GetPortNameRequest")
	proto.RegisterType((*GetPortNameResponse)(nil), "port.GetPortNameResponse")
}

func init() { proto.RegisterFile("port.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 644 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x94, 0x54, 0xcf, 0x6e, 0xd3, 0x4c,
	0x10, 0x57, 0x92, 0x36, 0x4d, 0x27, 0x4e, 0x9a, 0x6e, 0xab, 0x7e, 0xfb, 0x81, 0x04, 0xd4, 0x20,
	0x54, 0x84, 0xd4, 0x43, 0x91, 0xe0, 0x02, 0xa7, 0x82, 0x50, 0x0f, 0x54, 0x95, 0xfb, 0x00, 0x91,
	0x63, 0x6f, 0xdc, 0x55, 0x37, 0x6b, 0x63, 0xaf, 0x51, 0xfa, 0x68, 0x3c, 0x12, 0x6f, 0xc1, 0xcc,
	0xec, 0xa6, 0x09, 0x97, 0x20, 0x4e, 0xfe, 0xfd, 0x99, 0x19, 0xef, 0xce, 0x8c, 0x16, 0xa0, 0x2a,
	0x6b, 0x77, 0x5e, 0xd5, 0xa5, 0x2b, 0xc5, 0x0e, 0xe1, 0xf8, 0x67, 0x0f, 0xe0, 0x06, 0xc1, 0x65,
	0x69, 0xe7, 0xba, 0x10, 0x63, 0xe8, 0xce, 0x95, 0xec, 0xbc, 0xe8, 0x9d, 0x8d, 0x12, 0x44, 0xc4,
	0x0b, 0x25, 0xbb, 0x9e, 0x17, 0xcc, 0x97, 0x4a, 0xf6, 0x3c, 0x5f, 0x32, 0xcf, 0x94, 0xdc, 0xf1,
	0x3c, 0x53, 0x22, 0x82, 0x8e, 0x92, 0xbb, 0x4c, 0x3b, 0xec, 0xde, 0x15, 0xb2, 0xef, 0xdd, 0xbb,
	0x42, 0x4c, 0xa0, 0xd7, 0x64, 0x5a, 0xee, 0xb1, 0x40, 0x90, 0x95, 0xb9, 0x96, 0x83, 0xa0, 0xcc,
	0xbd, 0x52, 0x69, 0xb9, 0x1f, 0x94, 0x4a, 0x8b, 0xe7, 0x30, 0xc4, 0xcf, 0xb4, 0x69, 0x67, 0x74,
	0x62, 0x09, 0xec, 0x00, 0x4a, 0xb7, 0x5e, 0x11, 0x02, 0xf8, 0x2e, 0x72, 0xc8, 0x0e, 0x63, 0x2a,
	0x93, 0x55, 0xad, 0x8c, 0x7c, 0x19, 0x84, 0xa4, 0xa4, 0xc6, 0xc8, 0x91, 0x57, 0x10, 0x8a, 0xa7,
	0xb0, 0xdf, 0xb8, 0x34, 0xbb, 0x9f, 0x6a, 0xeb, 0xe4, 0x98, 0xf5, 0x01, 0x0b, 0x57, 0xd6, 0xad,
	0x4d, 0xb5, 0x74, 0xf2, 0x60, 0xc3, 0xfc, 0xb2, 0xe4, 0xea, 0x2e, 0x5f, 0xc8, 0x89, 0xaf, 0x85,
	0x90, 0x94, 0xaa, 0xb4, 0xf2, 0xd0, 0x2b, 0x08, 0xe9, 0x54, 0xc6, 0xe8, 0x5c, 0x0a, 0x7f, 0x2a,
	0xc2, 0xdc, 0x3e, 0x23, 0x8f, 0x42, 0xfb, 0x0c, 0x65, 0xd5, 0xd9, 0x83, 0x3c, 0xf6, 0x59, 0x08,
	0x49, 0xb1, 0x7a, 0x2e, 0x4f, 0xbc, 0x82, 0x50, 0x48, 0xd8, 0xcb, 0x4a, 0xeb, 0xea, 0xd2, 0xc8,
	0xff, 0x58, 0x5d, 0xd1, 0xf8, 0x57, 0x17, 0x06, 0x34, 0xbb, 0x2b, 0x3b, 0x2f, 0xa9, 0x4b, 0x69,
	0xe6, 0x74, 0x69, 0xa7, 0x8b, 0xb4, 0xb9, 0xc7, 0x11, 0x76, 0xa8, 0x4b, 0x5e, 0xfa, 0x86, 0x8a,
	0x38, 0x85, 0x68, 0x23, 0xe0, 0x02, 0x87, 0x4a, 0x11, 0xc3, 0x75, 0xc4, 0x85, 0x38, 0x81, 0xbe,
	0xb2, 0xe9, 0xcc, 0xd0, 0x84, 0x3b, 0x67, 0xbd, 0x24, 0x30, 0xaa, 0x6d, 0xb4, 0xbd, 0x9f, 0xe2,
	0xfd, 0x5d, 0xdb, 0xe0, 0xb8, 0xc9, 0x04, 0x92, 0x6e, 0x59, 0x11, 0xff, 0xc3, 0x20, 0x6d, 0x5d,
	0x39, 0xb5, 0xaa, 0xc0, 0xe9, 0x93, 0xbb, 0x47, 0xfc, 0x5a, 0x15, 0xe2, 0x18, 0x76, 0x9b, 0x4a,
	0xa9, 0x1c, 0xd7, 0x80, 0x74, 0x4f, 0xe8, 0x4f, 0x79, 0x5b, 0x19, 0xb5, 0xc4, 0x65, 0xe0, 0x3f,
	0x79, 0x26, 0x9e, 0xc0, 0x80, 0xca, 0x36, 0x59, 0x6a, 0x71, 0x29, 0xc8, 0x79, 0xe4, 0x54, 0xc9,
	0xa8, 0xb4, 0xb6, 0xb8, 0x1b, 0x74, 0x72, 0x4f, 0xa8, 0x3d, 0xb9, 0x46, 0xbf, 0xce, 0x71, 0x33,
	0xf8, 0xcf, 0x81, 0x8a, 0x67, 0x00, 0x3f, 0x4c, 0x8a, 0x6b, 0x6d, 0x9c, 0xaa, 0x71, 0x39, 0xb8,
	0x21, 0x6b, 0x45, 0xbc, 0x85, 0xc3, 0xd6, 0xba, 0xb4, 0x28, 0x54, 0x3e, 0xad, 0x6a, 0x5d, 0xd6,
	0xda, 0x3d, 0xe0, 0xc2, 0x50, 0x8d, 0xc9, 0xca, 0xb8, 0x09, 0x7a, 0x7c, 0x0a, 0xc3, 0x2b, 0xab,
	0x5d, 0xa2, 0xbe, 0xb7, 0xaa, 0xe1, 0x95, 0x6b, 0x91, 0x72, 0x9b, 0x7b, 0x09, 0xe3, 0x78, 0x0c,
	0x91, 0x0f, 0x69, 0x70, 0xfc, 0x8d, 0x8a, 0x63, 0x88, 0x2e, 0xe9, 0x8c, 0xdb, 0x72, 0x0e, 0x60,
	0x14, 0x62, 0x42, 0xd2, 0x7b, 0x88, 0x6e, 0xea, 0x72, 0xa6, 0xb6, 0x24, 0xf1, 0xbe, 0xcf, 0x16,
	0x15, 0x4f, 0x30, 0x4a, 0x18, 0xc7, 0x2f, 0x61, 0x14, 0xf2, 0x7c, 0xa1, 0xc7, 0xa0, 0xce, 0x46,
	0xd0, 0x07, 0x18, 0x7d, 0x56, 0xb8, 0xc3, 0x77, 0xff, 0x5a, 0xfd, 0x15, 0x8c, 0x57, 0x89, 0x5b,
	0xca, 0xbf, 0x86, 0xc9, 0x57, 0x15, 0x5e, 0x92, 0x6d, 0x97, 0xfe, 0x04, 0x87, 0x1b, 0x71, 0xa1,
	0xe0, 0x19, 0xf4, 0x33, 0x56, 0x38, 0x74, 0x78, 0x31, 0x39, 0xe7, 0xb7, 0x6a, 0xfd, 0x36, 0x25,
	0xc1, 0x8f, 0x3f, 0x82, 0xc0, 0x74, 0x32, 0xae, 0xd3, 0xc5, 0x5f, 0x1b, 0x45, 0x0f, 0x43, 0xd7,
	0x6b, 0xfc, 0xe0, 0xbd, 0x81, 0xa3, 0x3f, 0xb2, 0xd7, 0xf7, 0xb1, 0xc8, 0x39, 0x7d, 0x3f, 0x61,
	0x3c, 0xeb, 0xf3, 0x43, 0xf9, 0xee, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0x56, 0x18, 0xf0, 0xef,
	0x36, 0x05, 0x00, 0x00,
}
